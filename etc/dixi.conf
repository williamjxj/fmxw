# Reference:
# http://www.shroomery.org/forums/dosearch.php.txt
# http://www.ibm.com/developerworks/cn/opensource/os-php-sphinxsearch/index.html
# main+delta: http://www.sanisoft.com/blog/2010/12/27/how-to-live-index-updates-in-sphinx-search/

source contents
{
	type	= mysql
	sql_host	= localhost
	sql_user	= coreseek
	sql_pass	= sphinx20121018
	sql_db		= dixi
	sql_port	= 3306		#/etc/my.cnf
	sql_sock	= /var/lib/mysql/mysql.sock
	
	# 发送SQL语句前发送
	sql_query_pre		= SET NAMES utf8    #设置字符编码
	#A value of 0 or OFF prevents caching or retrieval of cached results.
	sql_query_pre		= SET SESSION query_cache_type=OFF

    sql_query_pre		= REPLACE INTO sph_counter SELECT 1, MAX(cid) FROM contents
	sql_query_range		= SELECT MIN(cid), MAX(cid) FROM contents
	sql_range_step		= 1000

	sql_query = SELECT cid, title, url, UNIX_TIMESTAMP(pubdate) pubdate, author, source, content, category, cate_id, item, iid, language, \
					clicks, tags, likes, fandui, guanzhu, pinglun, createdby, UNIX_TIMESTAMP(created) created FROM contents \
					WHERE cid >= $start AND cid <= $end
		
	# WARNING: attribute 'cid' not found - IGNORING
	sql_attr_uint 			= cate_id
	sql_attr_uint	 		= iid
	#sql_attr_string		= title # will be stored but not be indexed.
	sql_attr_str2ordinal	= language
	sql_attr_str2ordinal	= createdby
	sql_attr_uint			= clicks
	sql_attr_uint			= guanzhu
	sql_attr_uint			= pinglun
	sql_attr_uint			= likes
	sql_attr_uint			= fandui
	sql_attr_string	= tags
	# sql_attr_timestamp	= pubdate     # works? pubdate=varchar(30)
	sql_attr_timestamp		= created     # 时间戳
	
	sql_query_info	= SELECT * FROM contents WHERE cid=$id
}

source increment : contents
{
	sql_query_pre		= SET SESSION query_cache_type=OFF
	sql_query_pre		= SET NAMES utf8
	sql_query_range		= 
	sql_query = SELECT cid, title, url, pubdate, author, source, content, category, cate_id, item, iid, language, \
					clicks, tags, likes, fandui, guanzhu, pinglun, createdby, UNIX_TIMESTAMP(created) created FROM contents \
							WHERE cid > ( SELECT max_id FROM sph_counter WHERE counter_id=1 )
	sql_attr_uint 			= cate_id
	sql_attr_uint	 		= iid
	#sql_attr_string		= title # will be stored but not be indexed.
	sql_attr_str2ordinal	= language
	sql_attr_str2ordinal	= createdby
	sql_attr_uint			= clicks
	sql_attr_uint			= guanzhu
	sql_attr_uint			= pinglun
	sql_attr_uint			= likes
	sql_attr_uint			= fandui
	sql_attr_string	= tags
	#sql_attr_timestamp		= pubdate
	sql_attr_timestamp		= created     # 时间戳
}

source comments
{
	type	= mysql
	sql_host	= localhost
	sql_user	= coreseek
	sql_pass	= sphinx20121018
	sql_db		= dixi
	sql_port	= 3306		#/etc/my.cnf
	sql_sock	= /var/lib/mysql/mysql.sock
	
	# 发送SQL语句前发送
	sql_query_pre		= SET NAMES utf8    #设置字符编码
	#A value of 0 or OFF prevents caching or retrieval of cached results.
	sql_query_pre		= SET SESSION query_cache_type=OFF

    sql_query_pre		= REPLACE INTO sph_counter SELECT 2, MAX(id) FROM comments
	sql_query_range		= SELECT MIN(id), MAX(id) FROM comments
	sql_query			= SELECT id, uid, comment, create_time, author, email, cid, area, zhichi \
							FROM comments where id >= $start AND id <= $end 
}

source newdata : comments
{
	sql_query_pre		= SET SESSION query_cache_type=OFF
	sql_query_pre		= SET NAMES utf8
	sql_query_range		= 
	sql_range_step		=
	sql_query			= SELECT id, uid, comment, create_time, author, email, cid, area, zhichi \
							FROM comments where id > ( SELECT max_id FROM sph_counter WHERE counter_id=2 )
}

index comments
{
	source				= comments
	path				= /var/data/dixi/comments
	docinfo				= extern
	ngram_len			= 0
	min_word_len		= 3
	charset_type		= zh_cn.utf-8
	charset_dictpath	= /usr/local/mmseg/etc/
	stopwords			= /usr/local/mmseg/etc/stopwords.txt
	mlock				= 0
	morphology			= none
}
index newdata : comments
{
	source	= newdata
	path	= /var/data/dixi/newdata
}


index contents
{
	source				= contents

	# index files path and file name, without extension. mandatory, path must be writable, extensions will be auto-appended
	path				= /var/data/dixi/contents

	charset_dictpath	= /usr/local/mmseg/etc/
	charset_type		= zh_cn.utf-8
	stopwords			= /usr/local/mmseg/etc/stopwords.txt
	ngram_len			= 0

	# 'utf-8' default value is
	# charset_table	 = 0..9, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F
	
	# html_strip = 0
	docinfo		= extern
	morphology	= none
	
	# minimum indexed word length
	# default is 1 (index everything)
	min_word_len	= 3

	# ignored characters list
	# optional, default value is empty
	#
	# ignore_chars	 = U+00AD
	
	
	# minimum word prefix length to index
	# optional, default is 0 (do not index prefixes)
	#
	# min_prefix_len	= 0
	
	
	# minimum word infix length to index
	# optional, default is 0 (do not index infixes)
	#
	# min_infix_len	 = 0
	
	
	# list of fields to limit prefix/infix indexing to
	# optional, default value is empty (index all fields in prefix/infix mode)
	#
	# prefix_fields	 = filename
	# infix_fields	 = url, domain
	
	# position increment on stopword
	# optional, allowed values are 0 and 1, default is 1
	# stopword_step	 = 1
}
index increment : contents
{
	source = increment
	path = /var/data/dixi/increment
}

# inherited index example
#
# all the parameters are copied from the parent index,
# and may then be overridden in this index definition

indexer
{
    mem_limit            = 256M
}

#服务器进程
searchd
{
	port				= 9313
	log					= /var/log/dixi/searchd.log
	query_log			= /var/log/dixi/query.log
	pid_file			= /var/log/dixi/searchd.pid
}
